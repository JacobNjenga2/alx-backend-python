# Rolling Update Deployment Configuration
# This deployment uses RollingUpdate strategy for zero-downtime updates

apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-messaging-rolling
  labels:
    app: django-messaging
    version: v2.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1        # Maximum number of pods that can be created above desired replicas
      maxUnavailable: 0  # Maximum number of pods that can be unavailable during update
  selector:
    matchLabels:
      app: django-messaging
  template:
    metadata:
      labels:
        app: django-messaging
        version: v2.0
    spec:
      containers:
      - name: django-app
        image: django-messaging:v2.0
        imagePullPolicy: Never
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: DEBUG
          value: "True"
        - name: MYSQL_DB
          value: "messaging_db"
        - name: MYSQL_USER
          value: "messaging_user"
        - name: MYSQL_PASSWORD
          value: "messaging_password"
        - name: MYSQL_HOST
          value: "mysql-service"
        - name: MYSQL_PORT
          value: "3306"
        - name: DJANGO_SETTINGS_MODULE
          value: "messaging_app.settings"
        - name: APP_VERSION
          value: "v2.0-rolling"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health/
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        volumeMounts:
        - name: app-config
          mountPath: /app/config
        - name: app-logs
          mountPath: /app/logs
      volumes:
      - name: app-config
        configMap:
          name: django-config-v2
      - name: app-logs
        emptyDir: {}
      terminationGracePeriodSeconds: 30
---
# Service for the rolling update deployment
apiVersion: v1
kind: Service
metadata:
  name: django-messaging-rolling-service
  labels:
    app: django-messaging
    version: v2.0
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: django-messaging
---
# ConfigMap for v2.0 configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: django-config-v2
data:
  ALLOWED_HOSTS: "*"
  CORS_ORIGIN_WHITELIST: "*"
  SECRET_KEY: "your-secret-key-v2-change-in-production"
  DEBUG: "True"
  LOG_LEVEL: "INFO"
---
# Horizontal Pod Autoscaler for automatic scaling
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: django-messaging-hpa
  labels:
    app: django-messaging
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: django-messaging-rolling
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
